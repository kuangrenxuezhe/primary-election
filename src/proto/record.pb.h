// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: record.proto

#ifndef PROTOBUF_record_2eproto__INCLUDED
#define PROTOBUF_record_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_record_2eproto();
void protobuf_AssignDesc_record_2eproto();
void protobuf_ShutdownFile_record_2eproto();

class Elimination;
class ItemInfo;
class ItemQuery;
class KeyPair;
class KeyStr;
class KeyTime;
class Status;
class UserInfo;
class UserQuery;

enum Code {
  CODE_OK = 0,
  CODE_NOT_FOUND = 1,
  CODE_CORRUPTION = 2,
  CODE_NOT_SUPPORTED = 3,
  CODE_INVALID_ARGUMENT = 4,
  CODE_IO_ERROR = 5,
  Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Code_IsValid(int value);
const Code Code_MIN = CODE_OK;
const Code Code_MAX = CODE_IO_ERROR;
const int Code_ARRAYSIZE = Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* Code_descriptor();
inline const ::std::string& Code_Name(Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    Code_descriptor(), value);
}
inline bool Code_Parse(
    const ::std::string& name, Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Code>(
    Code_descriptor(), name, value);
}
// ===================================================================

class Status : public ::google::protobuf::Message {
 public:
  Status();
  virtual ~Status();

  Status(const Status& from);

  inline Status& operator=(const Status& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Status& default_instance();

  void Swap(Status* other);

  // implements Message ----------------------------------------------

  inline Status* New() const { return New(NULL); }

  Status* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Status& from);
  void MergeFrom(const Status& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Status* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional string reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:proto.Status)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_record_2eproto();
  friend void protobuf_AssignDesc_record_2eproto();
  friend void protobuf_ShutdownFile_record_2eproto();

  void InitAsDefaultInstance();
  static Status* default_instance_;
};
// -------------------------------------------------------------------

class Elimination : public ::google::protobuf::Message {
 public:
  Elimination();
  virtual ~Elimination();

  Elimination(const Elimination& from);

  inline Elimination& operator=(const Elimination& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Elimination& default_instance();

  void Swap(Elimination* other);

  // implements Message ----------------------------------------------

  inline Elimination* New() const { return New(NULL); }

  Elimination* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Elimination& from);
  void MergeFrom(const Elimination& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Elimination* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional int32 etime = 2;
  void clear_etime();
  static const int kEtimeFieldNumber = 2;
  ::google::protobuf::int32 etime() const;
  void set_etime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.Elimination)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 etime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_record_2eproto();
  friend void protobuf_AssignDesc_record_2eproto();
  friend void protobuf_ShutdownFile_record_2eproto();

  void InitAsDefaultInstance();
  static Elimination* default_instance_;
};
// -------------------------------------------------------------------

class KeyStr : public ::google::protobuf::Message {
 public:
  KeyStr();
  virtual ~KeyStr();

  KeyStr(const KeyStr& from);

  inline KeyStr& operator=(const KeyStr& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyStr& default_instance();

  void Swap(KeyStr* other);

  // implements Message ----------------------------------------------

  inline KeyStr* New() const { return New(NULL); }

  KeyStr* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyStr& from);
  void MergeFrom(const KeyStr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KeyStr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // optional bytes str = 2;
  void clear_str();
  static const int kStrFieldNumber = 2;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  void set_str(const char* value);
  void set_str(const void* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:proto.KeyStr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_record_2eproto();
  friend void protobuf_AssignDesc_record_2eproto();
  friend void protobuf_ShutdownFile_record_2eproto();

  void InitAsDefaultInstance();
  static KeyStr* default_instance_;
};
// -------------------------------------------------------------------

class KeyTime : public ::google::protobuf::Message {
 public:
  KeyTime();
  virtual ~KeyTime();

  KeyTime(const KeyTime& from);

  inline KeyTime& operator=(const KeyTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyTime& default_instance();

  void Swap(KeyTime* other);

  // implements Message ----------------------------------------------

  inline KeyTime* New() const { return New(NULL); }

  KeyTime* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyTime& from);
  void MergeFrom(const KeyTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KeyTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // optional int32 last_modified = 2;
  void clear_last_modified();
  static const int kLastModifiedFieldNumber = 2;
  ::google::protobuf::int32 last_modified() const;
  void set_last_modified(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.KeyTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::int32 last_modified_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_record_2eproto();
  friend void protobuf_AssignDesc_record_2eproto();
  friend void protobuf_ShutdownFile_record_2eproto();

  void InitAsDefaultInstance();
  static KeyTime* default_instance_;
};
// -------------------------------------------------------------------

class KeyPair : public ::google::protobuf::Message {
 public:
  KeyPair();
  virtual ~KeyPair();

  KeyPair(const KeyPair& from);

  inline KeyPair& operator=(const KeyPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyPair& default_instance();

  void Swap(KeyPair* other);

  // implements Message ----------------------------------------------

  inline KeyPair* New() const { return New(NULL); }

  KeyPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyPair& from);
  void MergeFrom(const KeyPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KeyPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional float power = 3;
  void clear_power();
  static const int kPowerFieldNumber = 3;
  float power() const;
  void set_power(float value);

  // @@protoc_insertion_point(class_scope:proto.KeyPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  float power_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_record_2eproto();
  friend void protobuf_AssignDesc_record_2eproto();
  friend void protobuf_ShutdownFile_record_2eproto();

  void InitAsDefaultInstance();
  static KeyPair* default_instance_;
};
// -------------------------------------------------------------------

class UserQuery : public ::google::protobuf::Message {
 public:
  UserQuery();
  virtual ~UserQuery();

  UserQuery(const UserQuery& from);

  inline UserQuery& operator=(const UserQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserQuery& default_instance();

  void Swap(UserQuery* other);

  // implements Message ----------------------------------------------

  inline UserQuery* New() const { return New(NULL); }

  UserQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserQuery& from);
  void MergeFrom(const UserQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.UserQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_record_2eproto();
  friend void protobuf_AssignDesc_record_2eproto();
  friend void protobuf_ShutdownFile_record_2eproto();

  void InitAsDefaultInstance();
  static UserQuery* default_instance_;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  inline UserInfo* New() const { return New(NULL); }

  UserInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional int32 last_modified = 2;
  void clear_last_modified();
  static const int kLastModifiedFieldNumber = 2;
  ::google::protobuf::int32 last_modified() const;
  void set_last_modified(::google::protobuf::int32 value);

  // repeated .proto.KeyStr subscribe = 3;
  int subscribe_size() const;
  void clear_subscribe();
  static const int kSubscribeFieldNumber = 3;
  const ::proto::KeyStr& subscribe(int index) const;
  ::proto::KeyStr* mutable_subscribe(int index);
  ::proto::KeyStr* add_subscribe();
  ::google::protobuf::RepeatedPtrField< ::proto::KeyStr >*
      mutable_subscribe();
  const ::google::protobuf::RepeatedPtrField< ::proto::KeyStr >&
      subscribe() const;

  // repeated .proto.KeyStr dislike = 4;
  int dislike_size() const;
  void clear_dislike();
  static const int kDislikeFieldNumber = 4;
  const ::proto::KeyStr& dislike(int index) const;
  ::proto::KeyStr* mutable_dislike(int index);
  ::proto::KeyStr* add_dislike();
  ::google::protobuf::RepeatedPtrField< ::proto::KeyStr >*
      mutable_dislike();
  const ::google::protobuf::RepeatedPtrField< ::proto::KeyStr >&
      dislike() const;

  // repeated .proto.KeyTime readed = 5;
  int readed_size() const;
  void clear_readed();
  static const int kReadedFieldNumber = 5;
  const ::proto::KeyTime& readed(int index) const;
  ::proto::KeyTime* mutable_readed(int index);
  ::proto::KeyTime* add_readed();
  ::google::protobuf::RepeatedPtrField< ::proto::KeyTime >*
      mutable_readed();
  const ::google::protobuf::RepeatedPtrField< ::proto::KeyTime >&
      readed() const;

  // repeated .proto.KeyTime recommended = 6;
  int recommended_size() const;
  void clear_recommended();
  static const int kRecommendedFieldNumber = 6;
  const ::proto::KeyTime& recommended(int index) const;
  ::proto::KeyTime* mutable_recommended(int index);
  ::proto::KeyTime* add_recommended();
  ::google::protobuf::RepeatedPtrField< ::proto::KeyTime >*
      mutable_recommended();
  const ::google::protobuf::RepeatedPtrField< ::proto::KeyTime >&
      recommended() const;

  // @@protoc_insertion_point(class_scope:proto.UserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::proto::KeyStr > subscribe_;
  ::google::protobuf::RepeatedPtrField< ::proto::KeyStr > dislike_;
  ::google::protobuf::RepeatedPtrField< ::proto::KeyTime > readed_;
  ::google::protobuf::RepeatedPtrField< ::proto::KeyTime > recommended_;
  ::google::protobuf::int32 last_modified_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_record_2eproto();
  friend void protobuf_AssignDesc_record_2eproto();
  friend void protobuf_ShutdownFile_record_2eproto();

  void InitAsDefaultInstance();
  static UserInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemQuery : public ::google::protobuf::Message {
 public:
  ItemQuery();
  virtual ~ItemQuery();

  ItemQuery(const ItemQuery& from);

  inline ItemQuery& operator=(const ItemQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemQuery& default_instance();

  void Swap(ItemQuery* other);

  // implements Message ----------------------------------------------

  inline ItemQuery* New() const { return New(NULL); }

  ItemQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemQuery& from);
  void MergeFrom(const ItemQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.ItemQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 item_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_record_2eproto();
  friend void protobuf_AssignDesc_record_2eproto();
  friend void protobuf_ShutdownFile_record_2eproto();

  void InitAsDefaultInstance();
  static ItemQuery* default_instance_;
};
// -------------------------------------------------------------------

class ItemInfo : public ::google::protobuf::Message {
 public:
  ItemInfo();
  virtual ~ItemInfo();

  ItemInfo(const ItemInfo& from);

  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();

  void Swap(ItemInfo* other);

  // implements Message ----------------------------------------------

  inline ItemInfo* New() const { return New(NULL); }

  ItemInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // optional float power = 2;
  void clear_power();
  static const int kPowerFieldNumber = 2;
  float power() const;
  void set_power(float value);

  // optional int32 publish_time = 3;
  void clear_publish_time();
  static const int kPublishTimeFieldNumber = 3;
  ::google::protobuf::int32 publish_time() const;
  void set_publish_time(::google::protobuf::int32 value);

  // optional int32 item_type = 4;
  void clear_item_type();
  static const int kItemTypeFieldNumber = 4;
  ::google::protobuf::int32 item_type() const;
  void set_item_type(::google::protobuf::int32 value);

  // optional int32 picture_num = 5;
  void clear_picture_num();
  static const int kPictureNumFieldNumber = 5;
  ::google::protobuf::int32 picture_num() const;
  void set_picture_num(::google::protobuf::int32 value);

  // optional int32 click_count = 6;
  void clear_click_count();
  static const int kClickCountFieldNumber = 6;
  ::google::protobuf::int32 click_count() const;
  void set_click_count(::google::protobuf::int32 value);

  // optional int32 click_time = 7;
  void clear_click_time();
  static const int kClickTimeFieldNumber = 7;
  ::google::protobuf::int32 click_time() const;
  void set_click_time(::google::protobuf::int32 value);

  // optional int32 category_id = 8;
  void clear_category_id();
  static const int kCategoryIdFieldNumber = 8;
  ::google::protobuf::int32 category_id() const;
  void set_category_id(::google::protobuf::int32 value);

  // repeated .proto.KeyPair region_id = 9;
  int region_id_size() const;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 9;
  const ::proto::KeyPair& region_id(int index) const;
  ::proto::KeyPair* mutable_region_id(int index);
  ::proto::KeyPair* add_region_id();
  ::google::protobuf::RepeatedPtrField< ::proto::KeyPair >*
      mutable_region_id();
  const ::google::protobuf::RepeatedPtrField< ::proto::KeyPair >&
      region_id() const;

  // repeated .proto.KeyPair belongs_to = 10;
  int belongs_to_size() const;
  void clear_belongs_to();
  static const int kBelongsToFieldNumber = 10;
  const ::proto::KeyPair& belongs_to(int index) const;
  ::proto::KeyPair* mutable_belongs_to(int index);
  ::proto::KeyPair* add_belongs_to();
  ::google::protobuf::RepeatedPtrField< ::proto::KeyPair >*
      mutable_belongs_to();
  const ::google::protobuf::RepeatedPtrField< ::proto::KeyPair >&
      belongs_to() const;

  // @@protoc_insertion_point(class_scope:proto.ItemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 item_id_;
  float power_;
  ::google::protobuf::int32 publish_time_;
  ::google::protobuf::int32 item_type_;
  ::google::protobuf::int32 picture_num_;
  ::google::protobuf::int32 click_count_;
  ::google::protobuf::int32 click_time_;
  ::google::protobuf::RepeatedPtrField< ::proto::KeyPair > region_id_;
  ::google::protobuf::RepeatedPtrField< ::proto::KeyPair > belongs_to_;
  ::google::protobuf::int32 category_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_record_2eproto();
  friend void protobuf_AssignDesc_record_2eproto();
  friend void protobuf_ShutdownFile_record_2eproto();

  void InitAsDefaultInstance();
  static ItemInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Status

// optional int32 code = 1;
inline void Status::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 Status::code() const {
  // @@protoc_insertion_point(field_get:proto.Status.code)
  return code_;
}
inline void Status::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:proto.Status.code)
}

// optional string reason = 2;
inline void Status::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Status::reason() const {
  // @@protoc_insertion_point(field_get:proto.Status.reason)
  return reason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Status::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Status.reason)
}
inline void Status::set_reason(const char* value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Status.reason)
}
inline void Status::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Status.reason)
}
inline ::std::string* Status::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:proto.Status.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Status::release_reason() {
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Status::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:proto.Status.reason)
}

// -------------------------------------------------------------------

// Elimination

// optional fixed64 id = 1;
inline void Elimination::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Elimination::id() const {
  // @@protoc_insertion_point(field_get:proto.Elimination.id)
  return id_;
}
inline void Elimination::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.Elimination.id)
}

// optional int32 etime = 2;
inline void Elimination::clear_etime() {
  etime_ = 0;
}
inline ::google::protobuf::int32 Elimination::etime() const {
  // @@protoc_insertion_point(field_get:proto.Elimination.etime)
  return etime_;
}
inline void Elimination::set_etime(::google::protobuf::int32 value) {
  
  etime_ = value;
  // @@protoc_insertion_point(field_set:proto.Elimination.etime)
}

// -------------------------------------------------------------------

// KeyStr

// optional fixed64 key = 1;
inline void KeyStr::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 KeyStr::key() const {
  // @@protoc_insertion_point(field_get:proto.KeyStr.key)
  return key_;
}
inline void KeyStr::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.KeyStr.key)
}

// optional bytes str = 2;
inline void KeyStr::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeyStr::str() const {
  // @@protoc_insertion_point(field_get:proto.KeyStr.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyStr::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.KeyStr.str)
}
inline void KeyStr::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.KeyStr.str)
}
inline void KeyStr::set_str(const void* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.KeyStr.str)
}
inline ::std::string* KeyStr::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:proto.KeyStr.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeyStr::release_str() {
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyStr::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:proto.KeyStr.str)
}

// -------------------------------------------------------------------

// KeyTime

// optional fixed64 key = 1;
inline void KeyTime::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 KeyTime::key() const {
  // @@protoc_insertion_point(field_get:proto.KeyTime.key)
  return key_;
}
inline void KeyTime::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.KeyTime.key)
}

// optional int32 last_modified = 2;
inline void KeyTime::clear_last_modified() {
  last_modified_ = 0;
}
inline ::google::protobuf::int32 KeyTime::last_modified() const {
  // @@protoc_insertion_point(field_get:proto.KeyTime.last_modified)
  return last_modified_;
}
inline void KeyTime::set_last_modified(::google::protobuf::int32 value) {
  
  last_modified_ = value;
  // @@protoc_insertion_point(field_set:proto.KeyTime.last_modified)
}

// -------------------------------------------------------------------

// KeyPair

// optional fixed64 key = 1;
inline void KeyPair::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 KeyPair::key() const {
  // @@protoc_insertion_point(field_get:proto.KeyPair.key)
  return key_;
}
inline void KeyPair::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.KeyPair.key)
}

// optional bytes name = 2;
inline void KeyPair::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeyPair::name() const {
  // @@protoc_insertion_point(field_get:proto.KeyPair.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyPair::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.KeyPair.name)
}
inline void KeyPair::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.KeyPair.name)
}
inline void KeyPair::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.KeyPair.name)
}
inline ::std::string* KeyPair::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.KeyPair.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeyPair::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyPair::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.KeyPair.name)
}

// optional float power = 3;
inline void KeyPair::clear_power() {
  power_ = 0;
}
inline float KeyPair::power() const {
  // @@protoc_insertion_point(field_get:proto.KeyPair.power)
  return power_;
}
inline void KeyPair::set_power(float value) {
  
  power_ = value;
  // @@protoc_insertion_point(field_set:proto.KeyPair.power)
}

// -------------------------------------------------------------------

// UserQuery

// optional fixed64 user_id = 1;
inline void UserQuery::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserQuery::user_id() const {
  // @@protoc_insertion_point(field_get:proto.UserQuery.user_id)
  return user_id_;
}
inline void UserQuery::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UserQuery.user_id)
}

// -------------------------------------------------------------------

// UserInfo

// optional fixed64 user_id = 1;
inline void UserInfo::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:proto.UserInfo.user_id)
  return user_id_;
}
inline void UserInfo::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UserInfo.user_id)
}

// optional int32 last_modified = 2;
inline void UserInfo::clear_last_modified() {
  last_modified_ = 0;
}
inline ::google::protobuf::int32 UserInfo::last_modified() const {
  // @@protoc_insertion_point(field_get:proto.UserInfo.last_modified)
  return last_modified_;
}
inline void UserInfo::set_last_modified(::google::protobuf::int32 value) {
  
  last_modified_ = value;
  // @@protoc_insertion_point(field_set:proto.UserInfo.last_modified)
}

// repeated .proto.KeyStr subscribe = 3;
inline int UserInfo::subscribe_size() const {
  return subscribe_.size();
}
inline void UserInfo::clear_subscribe() {
  subscribe_.Clear();
}
inline const ::proto::KeyStr& UserInfo::subscribe(int index) const {
  // @@protoc_insertion_point(field_get:proto.UserInfo.subscribe)
  return subscribe_.Get(index);
}
inline ::proto::KeyStr* UserInfo::mutable_subscribe(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UserInfo.subscribe)
  return subscribe_.Mutable(index);
}
inline ::proto::KeyStr* UserInfo::add_subscribe() {
  // @@protoc_insertion_point(field_add:proto.UserInfo.subscribe)
  return subscribe_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::KeyStr >*
UserInfo::mutable_subscribe() {
  // @@protoc_insertion_point(field_mutable_list:proto.UserInfo.subscribe)
  return &subscribe_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::KeyStr >&
UserInfo::subscribe() const {
  // @@protoc_insertion_point(field_list:proto.UserInfo.subscribe)
  return subscribe_;
}

// repeated .proto.KeyStr dislike = 4;
inline int UserInfo::dislike_size() const {
  return dislike_.size();
}
inline void UserInfo::clear_dislike() {
  dislike_.Clear();
}
inline const ::proto::KeyStr& UserInfo::dislike(int index) const {
  // @@protoc_insertion_point(field_get:proto.UserInfo.dislike)
  return dislike_.Get(index);
}
inline ::proto::KeyStr* UserInfo::mutable_dislike(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UserInfo.dislike)
  return dislike_.Mutable(index);
}
inline ::proto::KeyStr* UserInfo::add_dislike() {
  // @@protoc_insertion_point(field_add:proto.UserInfo.dislike)
  return dislike_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::KeyStr >*
UserInfo::mutable_dislike() {
  // @@protoc_insertion_point(field_mutable_list:proto.UserInfo.dislike)
  return &dislike_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::KeyStr >&
UserInfo::dislike() const {
  // @@protoc_insertion_point(field_list:proto.UserInfo.dislike)
  return dislike_;
}

// repeated .proto.KeyTime readed = 5;
inline int UserInfo::readed_size() const {
  return readed_.size();
}
inline void UserInfo::clear_readed() {
  readed_.Clear();
}
inline const ::proto::KeyTime& UserInfo::readed(int index) const {
  // @@protoc_insertion_point(field_get:proto.UserInfo.readed)
  return readed_.Get(index);
}
inline ::proto::KeyTime* UserInfo::mutable_readed(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UserInfo.readed)
  return readed_.Mutable(index);
}
inline ::proto::KeyTime* UserInfo::add_readed() {
  // @@protoc_insertion_point(field_add:proto.UserInfo.readed)
  return readed_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::KeyTime >*
UserInfo::mutable_readed() {
  // @@protoc_insertion_point(field_mutable_list:proto.UserInfo.readed)
  return &readed_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::KeyTime >&
UserInfo::readed() const {
  // @@protoc_insertion_point(field_list:proto.UserInfo.readed)
  return readed_;
}

// repeated .proto.KeyTime recommended = 6;
inline int UserInfo::recommended_size() const {
  return recommended_.size();
}
inline void UserInfo::clear_recommended() {
  recommended_.Clear();
}
inline const ::proto::KeyTime& UserInfo::recommended(int index) const {
  // @@protoc_insertion_point(field_get:proto.UserInfo.recommended)
  return recommended_.Get(index);
}
inline ::proto::KeyTime* UserInfo::mutable_recommended(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UserInfo.recommended)
  return recommended_.Mutable(index);
}
inline ::proto::KeyTime* UserInfo::add_recommended() {
  // @@protoc_insertion_point(field_add:proto.UserInfo.recommended)
  return recommended_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::KeyTime >*
UserInfo::mutable_recommended() {
  // @@protoc_insertion_point(field_mutable_list:proto.UserInfo.recommended)
  return &recommended_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::KeyTime >&
UserInfo::recommended() const {
  // @@protoc_insertion_point(field_list:proto.UserInfo.recommended)
  return recommended_;
}

// -------------------------------------------------------------------

// ItemQuery

// optional fixed64 item_id = 1;
inline void ItemQuery::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ItemQuery::item_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemQuery.item_id)
  return item_id_;
}
inline void ItemQuery::set_item_id(::google::protobuf::uint64 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemQuery.item_id)
}

// -------------------------------------------------------------------

// ItemInfo

// optional fixed64 item_id = 1;
inline void ItemInfo::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ItemInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemInfo.item_id)
  return item_id_;
}
inline void ItemInfo::set_item_id(::google::protobuf::uint64 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemInfo.item_id)
}

// optional float power = 2;
inline void ItemInfo::clear_power() {
  power_ = 0;
}
inline float ItemInfo::power() const {
  // @@protoc_insertion_point(field_get:proto.ItemInfo.power)
  return power_;
}
inline void ItemInfo::set_power(float value) {
  
  power_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemInfo.power)
}

// optional int32 publish_time = 3;
inline void ItemInfo::clear_publish_time() {
  publish_time_ = 0;
}
inline ::google::protobuf::int32 ItemInfo::publish_time() const {
  // @@protoc_insertion_point(field_get:proto.ItemInfo.publish_time)
  return publish_time_;
}
inline void ItemInfo::set_publish_time(::google::protobuf::int32 value) {
  
  publish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemInfo.publish_time)
}

// optional int32 item_type = 4;
inline void ItemInfo::clear_item_type() {
  item_type_ = 0;
}
inline ::google::protobuf::int32 ItemInfo::item_type() const {
  // @@protoc_insertion_point(field_get:proto.ItemInfo.item_type)
  return item_type_;
}
inline void ItemInfo::set_item_type(::google::protobuf::int32 value) {
  
  item_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemInfo.item_type)
}

// optional int32 picture_num = 5;
inline void ItemInfo::clear_picture_num() {
  picture_num_ = 0;
}
inline ::google::protobuf::int32 ItemInfo::picture_num() const {
  // @@protoc_insertion_point(field_get:proto.ItemInfo.picture_num)
  return picture_num_;
}
inline void ItemInfo::set_picture_num(::google::protobuf::int32 value) {
  
  picture_num_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemInfo.picture_num)
}

// optional int32 click_count = 6;
inline void ItemInfo::clear_click_count() {
  click_count_ = 0;
}
inline ::google::protobuf::int32 ItemInfo::click_count() const {
  // @@protoc_insertion_point(field_get:proto.ItemInfo.click_count)
  return click_count_;
}
inline void ItemInfo::set_click_count(::google::protobuf::int32 value) {
  
  click_count_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemInfo.click_count)
}

// optional int32 click_time = 7;
inline void ItemInfo::clear_click_time() {
  click_time_ = 0;
}
inline ::google::protobuf::int32 ItemInfo::click_time() const {
  // @@protoc_insertion_point(field_get:proto.ItemInfo.click_time)
  return click_time_;
}
inline void ItemInfo::set_click_time(::google::protobuf::int32 value) {
  
  click_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemInfo.click_time)
}

// optional int32 category_id = 8;
inline void ItemInfo::clear_category_id() {
  category_id_ = 0;
}
inline ::google::protobuf::int32 ItemInfo::category_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemInfo.category_id)
  return category_id_;
}
inline void ItemInfo::set_category_id(::google::protobuf::int32 value) {
  
  category_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemInfo.category_id)
}

// repeated .proto.KeyPair region_id = 9;
inline int ItemInfo::region_id_size() const {
  return region_id_.size();
}
inline void ItemInfo::clear_region_id() {
  region_id_.Clear();
}
inline const ::proto::KeyPair& ItemInfo::region_id(int index) const {
  // @@protoc_insertion_point(field_get:proto.ItemInfo.region_id)
  return region_id_.Get(index);
}
inline ::proto::KeyPair* ItemInfo::mutable_region_id(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ItemInfo.region_id)
  return region_id_.Mutable(index);
}
inline ::proto::KeyPair* ItemInfo::add_region_id() {
  // @@protoc_insertion_point(field_add:proto.ItemInfo.region_id)
  return region_id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::KeyPair >*
ItemInfo::mutable_region_id() {
  // @@protoc_insertion_point(field_mutable_list:proto.ItemInfo.region_id)
  return &region_id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::KeyPair >&
ItemInfo::region_id() const {
  // @@protoc_insertion_point(field_list:proto.ItemInfo.region_id)
  return region_id_;
}

// repeated .proto.KeyPair belongs_to = 10;
inline int ItemInfo::belongs_to_size() const {
  return belongs_to_.size();
}
inline void ItemInfo::clear_belongs_to() {
  belongs_to_.Clear();
}
inline const ::proto::KeyPair& ItemInfo::belongs_to(int index) const {
  // @@protoc_insertion_point(field_get:proto.ItemInfo.belongs_to)
  return belongs_to_.Get(index);
}
inline ::proto::KeyPair* ItemInfo::mutable_belongs_to(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ItemInfo.belongs_to)
  return belongs_to_.Mutable(index);
}
inline ::proto::KeyPair* ItemInfo::add_belongs_to() {
  // @@protoc_insertion_point(field_add:proto.ItemInfo.belongs_to)
  return belongs_to_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::KeyPair >*
ItemInfo::mutable_belongs_to() {
  // @@protoc_insertion_point(field_mutable_list:proto.ItemInfo.belongs_to)
  return &belongs_to_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::KeyPair >&
ItemInfo::belongs_to() const {
  // @@protoc_insertion_point(field_list:proto.ItemInfo.belongs_to)
  return belongs_to_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::Code>() {
  return ::proto::Code_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_record_2eproto__INCLUDED
