syntax = "proto3";
package module.protocol;

import "google/protobuf/any.proto";

//@merge Service
enum Code {
  CODE_OK               = 0;
  CODE_NOT_FOUND        = 1;
  CODE_CORRUPTION       = 2;
  CODE_NOT_SUPPORTED    = 3;
  CODE_INVALID_ARGUMENT = 4;
  CODE_IO_ERROR         = 5;
}

message StatusCode {
  int32    code = 1;
  string reason = 2;
}

//@merge UserDB
message KeyStr {
  fixed64 key = 1;
  bytes   str = 2;
}

message RepeatedKeyStr {
  repeated KeyStr key_str = 1;
}

message KeyTime {
  fixed64         key = 1;
  int32 last_modified = 2;
}

message RepeatedKeyTime {
  repeated KeyTime key_time = 1;
}

message KeyPair {
  fixed64 key = 1; 
  bytes  name = 2;
  float power = 3;
}

message RepeatedKeyPair {
  repeated KeyPair key_pair = 1;
}

message UserProfile {
  fixed64              user_id = 1;
  int32           last_modified= 2; // 用户最后活跃时间
  repeated KeyStr    subscribe = 3;
  repeated KeyStr      dislike = 4;
  repeated KeyTime      readed = 5;
  repeated KeyTime recommended = 6;
}

//@deprecated
message ItemInfo {
  fixed64              item_id = 1;
  float                  power = 2; // 初选权重
  int32	          publish_time = 3; // 发布时间
  int32              item_type = 4; // item类型(0 咨询，1 视频)
  int32            picture_num = 5; // 图片个数
  int32            click_count = 6;
  int32             click_time = 7;
  int32            category_id = 8; // 分类ID
  repeated KeyPair   region_id = 9; // 所属地区
  repeated KeyPair belongs_to = 10; 
  repeated KeyPair        top = 11;
}

// 所有字符数据均采用GBK编码
/////////////////////////////////////////////////
// 行为
enum ActionType {
  ACTION_TYPE_NONE       = 0; // 无操作
  ACTION_TYPE_CLICK      = 1; // 点击
  ACTION_TYPE_LIKE       = 2; // 点赞
  ACTION_TYPE_COMMENT    = 3; // 评论
  ACTION_TYPE_FAVORITE   = 4; // 收藏
  ACTION_TYPE_SHARE      = 5; // 分享
  ACTION_TYPE_DISLIKE    = 6; // 不喜欢
  ACTION_TYPE_CLOSE_PAGE = 7; // 关闭页面
}

message Action {
  int32             click_time = 1; // 点击时间,单位秒
  uint64               user_id = 2; // 用户ID
  fixed64              item_id = 3; // 文档ID
  int32              stay_time = 4; // 停留时间,单位秒
  ActionType            action = 5; // 用户行为类型
  bytes               location = 6; // 经纬度， 格式以英文逗号分割，按照先纬度（lat）后经度（lng）
  bytes                 srp_id = 7; // SRPID
  int32           click_source = 8; // 点击来源，默认值0=其它, 1=推荐频道
  bytes                dislike = 9; // 不喜欢原因, 包括：重复内容，内容质量差，来源:来源ID，广告，SRP词
  bytes                   zone = 10;// 用户所在省市城市， 地域格式--省:市， 市可为空
  repeated fixed64  history_id = 11;// 用户点击历史文档ID, 历史记录不带本文档ID
}

/////////////////////////////////////////////////
// 文档
message ItemTag {
  uint64    tag_id = 1; // 标签ID
  bytes   tag_name = 2; // 标签名称
  float  tag_power = 3; // 标签权重
}

message ItemWord {
  bytes word = 1; // 关键词
  int32 count = 2; // 关键词频率
}

enum ItemType {
  ITEM_TYPE_NONE   = 0;
  ITEM_TYPE_NEWS   = 1;
  ITEM_TYPE_VIDEO  = 2;
  ITEM_TYPE_CIRCLE = 3;
}

enum TopType {
  TOP_TYPE_NONE    = 0; // 不推荐
  TOP_TYPE_GLOBAL  = 1; // 全局推荐
  TOP_TYPE_PARTIAL = 2; // 部分推荐
}

message TopInfo {
  TopType             top_type = 1; // 推荐方式
  repeated bytes    top_srp_id = 2; // 文章所属SRPID
  repeated bytes top_circle_id = 3; // 文章所属圈子ID
}

message ItemSource {
  fixed64  source_id = 1; // 数据来源ID
  bytes  source_name = 2; // 数据来源
}

message Item {
  fixed64                  item_id = 1;
  int32               publish_time = 2;  // 发布时间,单位秒
  int32                  push_time = 3;  // 推送到推荐系统的时间,单位秒
  int32                picture_num = 4;  // 图片数量
  float                      power = 5;  // 资讯权值
  ItemType               item_type = 6;  // 数据类型
  repeated ItemTag        category = 7;  // 文章所属分类信息
  repeated ItemWord           word = 8;  // 文章包含关键词
  repeated ItemTag             srp = 9;  // 文章所属SRP信息
  repeated ItemTag          circle = 10; // 文章所属圈子信息
  TopInfo                 top_info = 11; // 全局推荐信息
  repeated bytes              zone = 12; // 地域格式--省:市;省:市; 支持多级, 市可为空
  ItemSource           data_source = 13; // 数据来源 
  repeated ItemTag             tag = 14; // 文章标签
}

/////////////////////////////////////////////////
// 订阅
message Subscribe {
  uint64            user_id = 1; // 用户ID
  repeated bytes     srp_id = 2; // SRPID
  repeated bytes  circle_id = 3; // 圈子id
}

/////////////////////////////////////////////////
// 推荐 - CC to Candidate(recommend)
enum RecommendType {
  RECOMMEND_TYPE_REC = 0; // 推荐
  RECOMMEND_TYPE_SUB = 1; // 订阅
}

enum RecommendNetwork {
  RECOMMEND_NETWORK_WIFI   = 0; // WIFI
  RECOMMEND_NETWORK_MOBILE = 1; // MOBILE
}

message Recommend {
  int32                     log = 1;
  uint64                user_id = 2;
  int32             request_num = 3; // 请求数量, 最大请求100
  RecommendType  recommend_type = 4;
  int32                beg_time = 5; // 默认值0, 为非默认值时取beg_time之前的数据
  int32                end_time = 6; // 保留字段
  bytes                    zone = 7; // 地域格式--省:市, 市可为空
  RecommendNetwork      network = 8; 
}

// 推荐 - Candidate to CC(recommend)
enum CandidateType {
  CANDIDATE_TYPE_NORMAL = 0;
  CANDIDATE_TYPE_ZONE   = 1;
  CANDIDATE_TYPE_VIDEO  = 2;
  CANDIDATE_TYPE_TOP    = 3;
}

message CandidateSetBase {
	uint64               user_id = 1;
  repeated fixed64     item_id = 2;
  repeated fixed64  history_id = 3;
}

message CandidateSetPayload {
  repeated float              power = 1;
  repeated int32       publish_time = 2 [packed=true];
  repeated int32        category_id = 3 [packed=true];
  repeated int32        picture_num = 4 [packed=true];
	repeated CandidateType       type = 5 [packed=true];
}

message CandidateSet {
	CandidateSetBase       base = 1;
	CandidateSetPayload payload = 2;
}

// 推荐 - CC to Candidate(user)
message User {
  uint64 user_id = 1;
}

// 推荐 - Candidate to CC(user)
message UserStatus {
  int32 is_new_user = 1;
}

// 反馈 - CC to Candidate(feedback)
message Feedback {
  uint64            user_id = 1;
  repeated fixed64  item_id = 2;
}

// 反馈 - Candidate to CC(feedback)
message FeedbackRespond {
  int32 respond = 1;
}

/////////////////////////////////////////////////
// 推荐 - CC to Algorithm
// 同 CandidateSetBase

// 推荐 - Algorithm to CC
message AlgorithmPower {
  repeated float power = 1;
}

// 推荐 - CC to Algorithm(category)
message Category {
  uint64     user_id = 1;
  int32  request_num = 2;
}

// 推荐 - Algorithm to CC(category)
message AlgorithmCategory {
  repeated int32 category = 1 [packed=true];
}

/////////////////////////////////////////////////
// CC私有定义
message TransferRequest {
  int32           main_protocol = 1;
  // for candidate: candidate set, user status; for algoritm: algoritm, user category
  int32            sub_protocol = 2;
  google.protobuf.Any  protocol = 3;
}

message TransferRespond {
  int32            respond_code = 1;
  google.protobuf.Any  protocol = 2;  
}

message HeartBeat {
  bytes heartbeat = 1;
}
